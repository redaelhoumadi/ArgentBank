swagger: "2.0"
info:
  title: Argent Bank API documentation  # Titre de la documentation de l'API
  description: Contains all available API endpoints in this codebase  # Description générale de l'API
  version: "1.0.0"  # Version de l'API
  termsOfService: "http://swagger.io/terms/"  # Lien vers les termes de service
host: localhost:3001  # Hôte de l'API
basePath: /api/v1  # Chemin de base pour toutes les requêtes API
schemes:
  - http  # Protocole utilisé (HTTP)

paths:
  /user/login:
    post:
      tags:
        - User Module  # Catégorie de l'endpoint
      summary: Login  # Résumé de l'endpoint
      description: API for Login  # Description détaillée de l'endpoint
      parameters:
        - in: body  # Paramètre situé dans le corps de la requête
          name: body  # Nom du paramètre
          description: Login Payload  # Description du paramètre
          required: true  # Indique que ce paramètre est obligatoire
          schema:
            $ref: "#/definitions/Login"  # Référence au schéma de données Login
      produces:
        - application/json  # Type de réponse produit (JSON)
      responses:
        "200":
          description: Login Successfully  # Description de la réponse pour le statut 200
          schema:
            $ref: "#/definitions/LoginResponse"  # Référence au schéma de la réponse LoginResponse
        "400":
          description: Invalid Fields  # Description de la réponse pour le statut 400
        "500":
          description: Internal Server Error  # Description de la réponse pour le statut 500

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"  # Référence au schéma de données User
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"  # Référence au schéma de la réponse ApiResponse
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/profile:
    get:
      security:
        - Bearer: []  # Utilise un token Bearer pour l'authentification
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"  # Référence au schéma de données UserProfile
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/accounts/{accountId}:
    get:
      tags:
        - User Transactions
      summary: User's Account
      description: API for getting all accounts
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: accountId
          description: User's account ID
          type: integer
          required: true
      responses:
        "200":
          description: Transaction retrieved successfully
          schema:
            $ref: "#/definitions/Transactions"  # Référence au schéma de données Transactions
        "400":
          description: Bad request. User ID must be an integer and larger than 0.
        "500":
          description: Internal Server Error

  /user/accounts/{accountId}/transactions:
    get:
      tags:
        - User Transactions
      summary: Transactions
      description: API for getting all transactions by account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: accountId
          description: User's account ID
          type: integer
          required: true
      responses:
        "200":
          description: Transaction retrieved successfully
          schema:
            $ref: "#/definitions/Transactions"
        "400":
          description: Bad request. User ID must be an integer and larger than 0.
        "500":
          description: Internal Server Error

  /user/accounts/{accountId}/transactions/{transactionsId}:
    get:
      tags:
        - User Transactions
      summary: Transaction details
      description: API for getting a single transaction details
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: accountId
          description: User's account ID
          type: integer
          required: true
        - in: path
          name: transactionsId
          description: Transaction's ID
          required: true
          type: integer
      responses:
        "200":
          description: Transaction retrieved successfully
          schema:
            $ref: "#/definitions/Transactions"
        "400":
          description: Bad request. User ID/ transaction ID must be an integer and larger than 0.
        "500":
          description: Internal Server Error

  /user/accounts/{accountId}/transactions/month/{month}:
    get:
      tags:
        - User Transactions
      summary: Get all transactions for a specific month
      description: API for retrieving all transactions for a specific month, per account.
      security:
        - Bearer: []
      parameters:
        - in: path
          name: month
          description: Retrieve information for the month (in the format YYYY-MM)
          type: string
          required: true
        - in: path
          name: accountId
          description: User's account ID
          type: integer
          required: true
      responses:
        "200":
          description: Transactions retrieved successfully for selected month
          schema:
            $ref: "#/definitions/Transactions"
        "400":
          description: Invalid request
        "401":
          description: Authorization information is missing or invalid
        "500":
          description: Internal Server Error

  /user/accounts/{accountId}/transactions/{transactionsId}/category:
    patch:
      tags:
        - User Transactions
      summary: Update an existing transaction (category)
      description: API for updating a transaction's category
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: accountId
          description: User's account ID
          type: integer
          required: true
        - in: path
          name: transactionsId
          description: Transaction's ID
          required: true
          type: integer
        - in: body
          name: body
          required: true
          description: Update transaction's informations
          schema:
            $ref: "#/definitions/TransactionsUpdateCategory"  # Référence au schéma de données TransactionsUpdateCategory
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: "#/definitions/Transactions"
        "400":
          description: Bad request. User ID/ transaction ID must be an integer and larger than 0.
        "500":
          description: Internal Server Error

  /user/accounts/{accountId}/transactions/{transactionsId}/notes:
    patch:
      tags:
        - User Transactions
      summary: Update an existing transaction (notes)
      description: API for updating transaction's notes
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: accountId
          description: User's account ID
          type: integer
          required: true
        - in: path
          name: transactionsId
          description: Transaction's ID
          required: true
          type: integer
        - in: body
          name: body
          required: true
          description: Update transaction's informations
          schema:
            $ref: "#/definitions/TransactionsUpdateNotes"  # Référence au schéma de données TransactionsUpdateNotes
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: "#/definitions/Transactions"
        "400":
          description: Bad request. User ID/ transaction ID must be an integer and larger than 0.
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization  # Nom du paramètre d'authentification
    in: header  # Lieu où le paramètre d'authentification est attendu (en-tête)

definitions:
  User:
    properties:
      email:
        type: string
        description: user email  # Email de l'utilisateur
      password:
        type: string
        description: user password  # Mot de passe de l'utilisateur
      firstName:
        type: string
        description: user first name  # Prénom de l'utilisateur
      lastName:
        type: string
        description: user last name  # Nom de famille de l'utilisateur
  Login:
    properties:
      email:
        type: string
        description: user email  # Email pour la connexion
      password:
        type: string
        description: user password  # Mot de passe pour la connexion
  ApiResponse:
    type: object
    properties:
      status:
        type: integer  # Statut de la réponse
      message:
        type: string  # Message de la réponse
      body:
        type: object
        properties:
          id:
            type: string  # Identifiant de l'utilisateur
          email:
            type: string  # Email de l'utilisateur
  LoginResponse:
    type: object
    properties:
      token:
        type: string  # Token JWT pour l'authentification
  UserProfile:
    type: object
    properties:
      firstName:
        type: string  # Prénom de l'utilisateur
      lastName:
        type: string  # Nom de famille de l'utilisateur
  Transactions:
    type: object
    properties:
      transactionsId:
        type: integer
        format: int64  # Identifiant de la transaction
      date:
        type: string
        format: date-time  # Date de la transaction
      description:
        type: string  # Description de la transaction
      amount:
        type: number  # Montant de la transaction
      currency:
        type: string  # Devise de la transaction
      type:
        type: string  # Type de la transaction
      notes:
        type: string  # Notes associées à la transaction
      category:
        type: string  # Catégorie de la transaction
  TransactionsUpdateCategory:
    type: object
    properties:
      category:
        type: string  # Nouvelle catégorie de la transaction
  TransactionsUpdateNotes:
    type: object
    properties:
      notes:
        type: string  # Nouvelles notes de la transaction
